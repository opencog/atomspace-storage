
                        HOWTO Run the SQL Tests
                        -----------------------

The test in this directory is disabled, because it requires some
manual configuration in order to make it work. Most users don't
bother with this configuration, so we disable it to avoid grief.

To run this test, perform the following steps:

1) Edit the CMakefile, uncomment the test.

2) Configure an SQL server, as described in opencog/persist/sql/README
   Abreiviated instructions follow below; else skip to step 3.

2a) Install the postgres server, the postgress client, unixodbc and
    odbc-postgresql

2b) Edit /etc/odbcinst.ini and copy the example config into there.
    Use the Unicode drivers, not the ANSI (ASCII) drivers. Opencog
    uses unicode.

2c) Create a test database. This can be done at the shell prompt: 

    $ createdb test-persist

2d) Create a database user named opencog_tester with password 'cheese'.
    You can pick a different username and password, but it must be
    consistent with the ~/.odbc.ini file. Do NOT use your login password!
    Pick something else! Create the user at the shell prompt:

    $ psql -c "CREATE USER opencog_tester WITH PASSWORD 'cheese'" -d test-persist

2e) Check that the above worked, by manually logging in:

    $  psql test-persist -U opencog_tester -W -h localhost

    If you can't login, something up above failed.

2f) Initialize the test database by creating tables. Do this with:

    $ cat opencog/persist/sql/atom.sql | psql test-persist -U opencog_tester -W -h localhost

2g) Verify that the tables were created. Login as before, then enter \d
    at the postgres prompt.  You should see this:

    test-persist=> \d
                  List of relations
     Schema |   Name    | Type  |     Owner      
    --------+-----------+-------+----------------
     public | atoms     | table | opencog_tester
     public | edges     | table | opencog_tester
     public | global    | table | opencog_tester
     public | typecodes | table | opencog_tester
    (4 rows)

    If the above doesn't work, go back, and try again.

2h) Verify that opencog_tester has write permissions to the tables. Do
    this by entering the below.

    test-persist=> INSERT INTO TypeCodes (type, typename) VALUES (97, 'SemanticRelationNode');

    You should see the appropriate respone:

    INSERT 0 1

    If the above doesn't work, go back, and try again.

2i) Edit ~/.odbc.ini and add something similar to the below. Pay special
    attention to the username, the password, and the name of the database
    to connect to.

    [opencog_test]
    Description = Unit-Test DB for Opencog unit tests.
    Driver      = PostgreSQL
    Trace       = 0
    TraceFile   =
    CommLog     = No
    Database    = test-persist
    Servername  = localhost
    Port        = 5432
    Username    = opencog_tester
    Password    = cheese
    ReadOnly    = No
    RowVersioning     = No
    ShowSystemTables  = Yes
    ShowOidColumn     = Yes
    FakeOidIndex      = Yes
    ConnSettings      =

2j) Edit lib/opencog-test.conf and verify that the username and password
    are set as above.

3) Run the test case:

   $ ./tests/scm/BasicSCMUTest

   It should print OK! at the end, if all tests passed.
